{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCGA,IAAM,EAAU,SAAS,gBAAgB,CAAC,MACtC,EAAQ,EAAG,SAAS,gBAAgB,CAAC,aACnC,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAY,MAAM,EAAQ,MAAM,EAAE,IAAI,CAAC,CAAA,GAgC7C,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAM,CAAvB,EACE,EAAK,gBAAgB,CAAC,QAAS,WAxB/B,AANA,CAAA,EAAQ,EAAG,SAAS,gBAAgB,CAAC,YAArC,EAMK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,KAAK,CAwBhB,EAxBuB,CAAC,WAAW,CAClC,EAAQ,EAAE,KAAK,CAuBhB,EAvBuB,CAAC,WAAW,CAExC,IAAI,EAAM,QAAQ,CAAC,KAMjB,OAAO,CAAS,CAeb,EAfoB,CACnB,EAAM,aAAa,CAAC,GACpB,EAAM,aAAa,CAAC,GAPxB,IAAM,EAAS,WAAW,EAAM,OAAO,CAAC,QAAS,KAC3C,EAAS,WAAW,EAAM,OAAO,CAAC,QAAS,KAEjD,OAAO,CAAS,CAiBb,EAjBoB,CAAG,EAAS,EAAS,EAAS,CAMzD,GAEA,EAAK,SAAS,CAAG,GAEjB,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAK,MAAM,CAAC,E,GAElC,CAAS,CAKF,EALS,CAAG,CAAC,CAAS,CAKtB,EAL6B,AAMpC,EACF,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAI,gBAAgB,CAAC,QAAS,WAG5B,AAFiB,SAAS,gBAAgB,CAAC,aAElC,OAAO,CAAC,SAAC,CAAlB,EAAwB,OAAA,EAAE,SAAS,CAAC,MAAM,CAAC,S,GAE3C,EAAI,SAAS,CAAC,GAAG,CAAC,SACpB,EACF,GA4DA,SAAS,IAAI,CAAC,kBAAkB,CAAC,YA1Df,8qCA4DlB,IAAM,EAAO,SAAS,aAAa,CAAC,sBAE9B,EAAe,WACnB,IAAI,EAAU,CAAA,EAER,EAAa,EAAK,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAEhD,GAAI,EAAW,MAAM,CAAG,GAAK,EAAW,MAAM,CAAG,EAI/C,OAHA,EAAiB,SAAU,uCAAwC,SACnE,EAAU,CAAA,EAKZ,IAAM,EAAM,SAAS,EAAK,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAE,WAE9C,AAAI,EAAM,IAAM,EAAM,IACpB,EAAiB,SAAU,iCAAkC,SAC7D,EAAU,CAAA,IAKZ,EAAK,gBAAgB,CAAC,SAAS,OAAO,CAAC,SAAC,CAAxC,EACE,GAAI,AAA8B,IAA9B,EAAM,KAAK,CAAC,IAAI,GAAG,MAAM,CAI3B,OAHA,EAAiB,SAAU,qBAAsB,SACjD,EAAU,CAAA,CAId,GAEO,EACT,EAEM,EAAmB,SAAC,CAAA,CAAO,CAAA,CAAa,CAA9C,EACE,IAAM,EAAe,SAAS,aAAa,CAAC,MAE5C,CAAA,EAAa,SAAS,CAAG,gBAAqB,MAAA,CAAL,GACzC,EAAa,YAAY,CAAC,UAAW,gBAErC,IAAM,EAAW,SAAS,aAAa,CAAC,MAClC,EAAO,SAAS,aAAa,CAAC,IAEpC,CAAA,EAAS,SAAS,CAAG,QACrB,EAAS,WAAW,CAAG,EAEvB,EAAK,WAAW,CAAG,EAEnB,EAAa,MAAM,CAAC,GACpB,EAAa,MAAM,CAAC,GAEpB,SAAS,IAAI,CAAC,MAAM,CAAC,GAErB,WAAW,WACT,EAAa,KAAK,CAAC,UAAU,CAAG,QAClC,EAAG,IACL,EAYA,AAFe,SAAS,aAAa,CAAC,UAE/B,gBAAgB,CAAC,QAAS,SAAC,CAAlC,EAGE,GAFA,EAAE,cAAc,GAEX,KAIL,IAAM,EAjBmB,CACzB,KAAM,EAAK,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GACnC,SAAU,EAAK,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAC3C,OAAQ,EAAK,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GACvC,IAAK,SAAS,EAAK,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAE,IACvC,OAAQ,WAAW,EAAK,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,WAAY,IACpE,EAaE,EAAK,KAAK,GAEV,IAAM,EAAS,SAAS,aAAa,CAAC,KAEtC,CAAA,EAAO,SAAS,CAAI,aAEZ,MAAA,CADA,EAAU,IAAI,CAAC,mBAEf,MAAA,CADA,EAAU,QAAQ,CAAC,mBAEnB,MAAA,CADA,EAAU,MAAM,CAAC,mBAEhB,MAAA,CADD,EAAU,GAAG,CAAC,oBACyB,MAAA,CAAtC,EAAU,MAAM,CAAC,cAAc,CAAC,MAAM,aAG/C,EAAK,OAAO,CAAC,GACb,EAAiB,WAAY,cAAe,WAC9C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar headers = document.querySelectorAll(\"th\");\nvar rows = _to_consumable_array(document.querySelectorAll(\"tbody tr\"));\nvar body = document.querySelector(\"tbody\");\nvar sortOrder = Array(headers.length).fill(true);\nfunction updateRows() {\n    rows = _to_consumable_array(document.querySelectorAll(\"tbody tr\"));\n}\nfunction sort(index) {\n    updateRows();\n    rows.sort(function(a, b) {\n        var cellA = a.cells[index].textContent;\n        var cellB = b.cells[index].textContent;\n        if (cellA.includes(\"$\")) {\n            var aValue = parseFloat(cellA.replace(/[$,]/g, \"\"));\n            var bValue = parseFloat(cellB.replace(/[$,]/g, \"\"));\n            return sortOrder[index] ? aValue - bValue : bValue - aValue;\n        } else return sortOrder[index] ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);\n    });\n    body.innerHTML = \"\";\n    rows.forEach(function(row) {\n        return body.append(row);\n    });\n    sortOrder[index] = !sortOrder[index];\n}\nheaders.forEach(function(head, index) {\n    head.addEventListener(\"click\", function() {\n        sort(index);\n    });\n});\nrows.forEach(function(row) {\n    row.addEventListener(\"click\", function() {\n        var trActive = document.querySelectorAll(\"tr.active\");\n        trActive.forEach(function(r) {\n            return r.classList.remove(\"active\");\n        });\n        row.classList.add(\"active\");\n    });\n});\nvar formHtml = '\\n<form class=\"new-employee-form\" >\\n      <label>\\n        Name:\\n        <input\\n          name=\"name\"\\n          type=\"text\"\\n          data-qa=\"name\"\\n          required\\n        >\\n      </label>\\n      <label>\\n        Position:\\n        <input\\n          name=\"position\"\\n          type=\"text\"\\n          data-qa=\"position\"\\n          required\\n        >\\n      </label>\\n      <label>\\n        Office:\\n        <select\\n          name=\"office\"\\n          type=\"se\"\\n          data-qa=\"office\"\\n          required\\n        >\\n          <option>Tokyo</option>\\n          <option>Singapore</option>\\n          <option>London</option>\\n          <option>New York</option>\\n          <option>Edinburgh</option>\\n          <option>San Francisco</option>\\n        </select>\\n      </label>\\n      <label>\\n        Age:\\n        <input\\n          name=\"age\"\\n          type=\"number\"\\n          data-qa=\"age\"\\n          required\\n        >\\n      </label>\\n      <label>\\n        Salary:\\n        <input\\n          name=\"salary\"\\n          type=\"number\"\\n          data-qa=\"salary\"\\n          required\\n        >\\n      </label>\\n      <button type=\"button\">Save to table</button>\\n    </form>\\n';\ndocument.body.insertAdjacentHTML(\"beforeend\", formHtml);\nvar form = document.querySelector(\".new-employee-form\");\nvar validateForm = function() {\n    var isValid = true;\n    var personName = form.elements.name.value.trim();\n    if (personName.length < 4 && personName.length > 0) {\n        showNotification(\"Error!\", \"The minimum name length is 4 letters\", \"error\");\n        isValid = false;\n        return isValid;\n    }\n    var age = parseInt(form.elements.age.value, 10);\n    if (age < 18 || age > 90) {\n        showNotification(\"Error!\", \"You are too young/old for this\", \"error\");\n        isValid = false;\n        return isValid;\n    }\n    form.querySelectorAll(\"input\").forEach(function(input) {\n        if (input.value.trim().length === 0) {\n            showNotification(\"Error!\", \"Fill in all fields\", \"error\");\n            isValid = false;\n            return isValid;\n        }\n    });\n    return isValid;\n};\nvar showNotification = function(title, description, type) {\n    var notification = document.createElement(\"div\");\n    notification.className = \"notification \".concat(type);\n    notification.setAttribute(\"data-qa\", \"notification\");\n    var newTitle = document.createElement(\"h2\");\n    var text = document.createElement(\"p\");\n    newTitle.className = \"title\";\n    newTitle.textContent = title;\n    text.textContent = description;\n    notification.append(newTitle);\n    notification.append(text);\n    document.body.append(notification);\n    setTimeout(function() {\n        notification.style.visibility = \"hidden\";\n    }, 3000);\n};\nvar getFormData = function() {\n    return {\n        name: form.elements.name.value.trim(),\n        position: form.elements.position.value.trim(),\n        office: form.elements.office.value.trim(),\n        age: parseInt(form.elements.age.value, 10),\n        salary: parseFloat(form.elements.salary.value.replace(/[^0-9.]/g, \"\"))\n    };\n};\nvar button = document.querySelector(\"button\");\nbutton.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    if (!validateForm()) return;\n    var newPerson = getFormData();\n    form.reset();\n    var newRow = document.createElement(\"tr\");\n    newRow.innerHTML = \"\\n    <td>\".concat(newPerson.name, \"</td>\\n    <td>\").concat(newPerson.position, \"</td>\\n    <td>\").concat(newPerson.office, \"</td>\\n    <td>\").concat(newPerson.age, \"</td>\\n    <td>$\").concat(newPerson.salary.toLocaleString(\"en\"), \"</td>\\n  \");\n    body.prepend(newRow);\n    showNotification(\"Success!\", \"+1 employee\", \"success\");\n});\n\n//# sourceMappingURL=index.20954b1e.js.map\n","'use strict';\n\n// write code here\nconst headers = document.querySelectorAll('th');\nlet rows = [...document.querySelectorAll('tbody tr')];\nconst body = document.querySelector('tbody');\nconst sortOrder = Array(headers.length).fill(true);\n\nfunction updateRows() {\n  rows = [...document.querySelectorAll('tbody tr')];\n}\n\nfunction sort(index) {\n  updateRows();\n\n  rows.sort((a, b) => {\n    const cellA = a.cells[index].textContent;\n    const cellB = b.cells[index].textContent;\n\n    if (cellA.includes('$')) {\n      const aValue = parseFloat(cellA.replace(/[$,]/g, ''));\n      const bValue = parseFloat(cellB.replace(/[$,]/g, ''));\n\n      return sortOrder[index] ? aValue - bValue : bValue - aValue;\n    } else {\n      return sortOrder[index]\n        ? cellA.localeCompare(cellB)\n        : cellB.localeCompare(cellA);\n    }\n  });\n\n  body.innerHTML = '';\n\n  rows.forEach((row) => body.append(row));\n\n  sortOrder[index] = !sortOrder[index];\n}\n\nheaders.forEach((head, index) => {\n  head.addEventListener('click', () => {\n    sort(index);\n  });\n});\n\nrows.forEach((row) => {\n  row.addEventListener('click', () => {\n    const trActive = document.querySelectorAll('tr.active');\n\n    trActive.forEach((r) => r.classList.remove('active'));\n\n    row.classList.add('active');\n  });\n});\n\nconst formHtml = `\n<form class=\"new-employee-form\" >\n      <label>\n        Name:\n        <input\n          name=\"name\"\n          type=\"text\"\n          data-qa=\"name\"\n          required\n        >\n      </label>\n      <label>\n        Position:\n        <input\n          name=\"position\"\n          type=\"text\"\n          data-qa=\"position\"\n          required\n        >\n      </label>\n      <label>\n        Office:\n        <select\n          name=\"office\"\n          type=\"se\"\n          data-qa=\"office\"\n          required\n        >\n          <option>Tokyo</option>\n          <option>Singapore</option>\n          <option>London</option>\n          <option>New York</option>\n          <option>Edinburgh</option>\n          <option>San Francisco</option>\n        </select>\n      </label>\n      <label>\n        Age:\n        <input\n          name=\"age\"\n          type=\"number\"\n          data-qa=\"age\"\n          required\n        >\n      </label>\n      <label>\n        Salary:\n        <input\n          name=\"salary\"\n          type=\"number\"\n          data-qa=\"salary\"\n          required\n        >\n      </label>\n      <button type=\"button\">Save to table</button>\n    </form>\n`;\n\ndocument.body.insertAdjacentHTML('beforeend', formHtml);\n\nconst form = document.querySelector('.new-employee-form');\n\nconst validateForm = () => {\n  let isValid = true;\n\n  const personName = form.elements.name.value.trim();\n\n  if (personName.length < 4 && personName.length > 0) {\n    showNotification('Error!', 'The minimum name length is 4 letters', 'error');\n    isValid = false;\n\n    return isValid;\n  }\n\n  const age = parseInt(form.elements.age.value, 10);\n\n  if (age < 18 || age > 90) {\n    showNotification('Error!', 'You are too young/old for this', 'error');\n    isValid = false;\n\n    return isValid;\n  }\n\n  form.querySelectorAll('input').forEach((input) => {\n    if (input.value.trim().length === 0) {\n      showNotification('Error!', 'Fill in all fields', 'error');\n      isValid = false;\n\n      return isValid;\n    }\n  });\n\n  return isValid;\n};\n\nconst showNotification = (title, description, type) => {\n  const notification = document.createElement('div');\n\n  notification.className = `notification ${type}`;\n  notification.setAttribute('data-qa', 'notification');\n\n  const newTitle = document.createElement('h2');\n  const text = document.createElement('p');\n\n  newTitle.className = 'title';\n  newTitle.textContent = title;\n\n  text.textContent = description;\n\n  notification.append(newTitle);\n  notification.append(text);\n\n  document.body.append(notification);\n\n  setTimeout(() => {\n    notification.style.visibility = 'hidden';\n  }, 3000);\n};\n\nconst getFormData = () => ({\n  name: form.elements.name.value.trim(),\n  position: form.elements.position.value.trim(),\n  office: form.elements.office.value.trim(),\n  age: parseInt(form.elements.age.value, 10),\n  salary: parseFloat(form.elements.salary.value.replace(/[^0-9.]/g, '')),\n});\n\nconst button = document.querySelector('button');\n\nbutton.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  if (!validateForm()) {\n    return;\n  }\n\n  const newPerson = getFormData();\n\n  form.reset();\n\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `\n    <td>${newPerson.name}</td>\n    <td>${newPerson.position}</td>\n    <td>${newPerson.office}</td>\n    <td>${newPerson.age}</td>\n    <td>$${newPerson.salary.toLocaleString('en')}</td>\n  `;\n\n  body.prepend(newRow);\n  showNotification('Success!', '+1 employee', 'success');\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","headers","document","querySelectorAll","rows","body","querySelector","sortOrder","fill","forEach","head","index","addEventListener","sort","a","b","cellA","cells","textContent","cellB","includes","localeCompare","aValue","parseFloat","replace","bValue","innerHTML","row","append","trActive","r","classList","remove","add","insertAdjacentHTML","form","validateForm","isValid","personName","elements","value","trim","showNotification","age","parseInt","input","title","description","type","notification","createElement","className","concat","setAttribute","newTitle","text","setTimeout","style","visibility","button","e","preventDefault","newPerson","position","office","salary","reset","newRow","toLocaleString","prepend"],"version":3,"file":"index.20954b1e.js.map"}